

/*
import React, { useState, useEffect, Suspense, lazy, createContext, useContext, useMemo } from 'react';
import { render } from 'react-dom';
import { BrowserRouter as Router, Routes, Route } from 'react-router-dom';
import { useRoutes } from 'hookrouter';
import './style.css';

// Lazy load components
const Home = lazy(() => import('./routes/Home'));
const About = lazy(() => import('./routes/About'));

const UserContext = createContext({});

// Add the missing Users component
const Users = () => {
  return (
    <div>
      <h1>Users Page</h1>
      {/* Add your users content here */}
    </div>
  );
};

let tot = 0.00;
let saveName = 'initial';
let saveArray = [];
let names = [];

const UserInfo = () => {
  const { userName, imageNbr } = useContext(UserContext);
  console.log('UserInfo ' + imageNbr + ' ' + userName);
  return (
    <p className="bg-teal-400 text-md font-bold pl-10 pt-2 pb-2 ">{userName}</p>
  );
};

const handleButtonClick = () => {
  alert('Button clicked!');
};

function UserAll() {
  const { userName, setUserName, imageNbr, setImageNbr } =
    useContext(UserContext);
  const changeHandler = (event) => setUserName('All');

  console.log('UserInfo ' + imageNbr + ' ' + userName);

  return (
    <div>
      <button
        className="bg-teal-400 text-left font-bold  pl-10 pt-2 pb-2 w-64 "
        onClick={changeHandler}
      >
        All
      </button>
    </div>
  );
}

function UserNameInput() {
  const { userName, setUserName, setImageNbr } = useContext(UserContext);
  
  React.useEffect(() => {
    setImageNbr(1);
  }, []);

  const changeHandler = (event) => setUserName(event.target.value);
  
  return (
    <input
      className="bg-teal-200 text-md font-bold focus:bg-teal-200"
      type="text"
      value={userName}
      onChange={changeHandler}
    />
  );
}

const Itemdesc = () => {
  return (
    <img
      class="flex justify-center items-center  pt-6 w-64"
      src="https://stackblitz.com/files/tailwindcss-aipmul/github/kbwoodall/tailwindcss-aipmul/main/golfPants.jpg"
    />
  );
};

const hdg = () => {
  return (
    <p className="bg-green-400 text-md font-bold pt-2 w-64 pl-2 pb-4">
      Total Purchases by Customer
    </p>
  );
};

function Ihdg() {
  return (
    <p className="bg-green-400 text-md font-bold pt-2 w-64 pl-4 pb-4">
      Item Description
    </p>
  );
}

function Chdg() {
  return (
    <p className="bg-green-400 text-md font-bold pt-2 pb-4 w-64 pl-4">
      My favorite Customers
    </p>
  );
}

const printall = (printList) => {
  const { userName, setUserName, imageNbr, setImageNbr } =
    useContext(UserContext);

  return printList.map((items) => (
    <p
      className="bg-teal-400 hover:bg-teal-200 text-md font-bold pl-10 pt-2 pb-2"
      key={items.id}
      onClick={(event) => {
        if (isNaN(items.itempic)) {
          setImageNbr(1);
          console.log('NOT A NUMBER');
        } else {
          setImageNbr(items.itempic);
          console.log('IS A NUMBER');
        }
      }}
    >
      {items.customer} {items.item}  ${items.cost}
    </p>
  ));
};

function Totln() {
  const { userName, setUserName, imageNbr, setImageNbr } =
    useContext(UserContext);
  if (userName === 'All') {
    setImageNbr(1);
    {
      return (
        <p className="bg-red-400 text-md font-bold pl-10 pt-2 pb-2">
          Total ${tot.toFixed(2)}
        </p>
      );
    }
  } else {
    return null;
  }
}

const list = [
  { id: 1, customer: 'Arnie', item: 'shirt-m', cost: 79.99, itempic: 4 },
  { id: 2, customer: 'Ben', item: 'shirt-lg', cost: 69.99, itempic: 4 },
  {
    id: 3,
    customer: 'Jack',
    item: 'attire',
    cost: 200.99,
    itempic: 2,
  },
  {
    id: 4,
    customer: 'Jack',
    item: 'pants',
    cost: 55.99,
    itempic: 3,
  },
];

function Cus() {
  const { userName, setUserName, imageNbr, setImageNbr, hindx, setHindx } =
    useContext(UserContext);

  let categories = [...new Set(list.map((iname) => iname.customer))];

  console.log('cus customer set ' + categories);

  let sublist = Array.from(categories);
  console.log('cus customer array ' + sublist);
  saveArray = sublist;
  console.log('cus saveArray is ' + saveArray.length);

  const indexInfo = (param) => {
    console.log('IndexInfo ' + param);

    return param;
  };

  function Shownames(props) {
    console.log('name is ' + props.name);

    return (
      <p className="bg-teal-400 hover:bg-teal-200 mr-2 pl-2">{props.name}</p>
    );
  }

  return sublist.map((person, index) => (
    <p
      className="bg-teal-400 text-md font-bold pl-2 pt-2 pb-2"
      key={index}
      onClick={(event) => {
        setUserName(person), setImageNbr(1);

        indexInfo(index);
        console.log('click lastIndex2 ' + indexInfo(index));
      }}
    >
      <Shownames name={person} />
    </p>
  ));
}

const Listing = () => {
  const { userName, setUserName, imageNbr, setImageNbr } =
    useContext(UserContext);
  console.log('listing ' + userName);

  console.log('list ' + list.length);
  let first = true;
  let hid = 0;
  let hcust = '';
  let hitem = '';
  let hcost = 0;
  let hitempic = 1;
  let subtot = 0.0;
  let prev = [];
  let printList = [];
  let newList = [];
  let slist = [];

  const print = () => {
    if (userName === 'All') {
      slist = [...list];
    } else {
      slist = list.filter((person) => {
        return person.customer === userName;
      });
    }
    console.log('slist ' + slist.length + ' ' + slist);
    tot = 0;
    for (let i = 0; i < slist.length; i++) {
      tot = tot + slist[i].cost;

      if (first) {
        (first = false),
          (hcust = slist[i].customer),
          (hitem = slist[i].item),
          (hitempic = slist[i].itempic),
          (hcost = slist[i].cost),
          (subtot = slist[i].cost),
          (hitempic = slist[i].itempic),
          (prev = [
            {
              id: hid++,
              customer: hcust,
              item: hitem,
              cost: hcost,
              itempic: hitempic,
            },
          ]);
      } else {
        if (hcust == slist[i].customer) {
          printList.push(prev[0]);
          subtot = subtot + slist[i].cost;
          hcust = slist[i].customer;
          hitem = slist[i].item;
          hcost = slist[i].cost;
          hitempic = slist[i].itempic;
          prev = [
            {
              id: hid++,
              customer: hcust,
              item: hitem,
              cost: hcost,
              itempic: hitempic,
            },
          ];
        } else {
          printList.push(prev[0]);
          prev = [{ id: hid++, customer: hcust, item: '', cost: subtot }];
          printList.push(prev[0]);
          hcust = slist[i].customer;
          hitem = slist[i].item;
          hcost = slist[i].cost;
          hitempic = slist[i].itempic;
          prev = [
            {
              id: hid++,
              customer: hcust,
              item: hitem,
              cost: hcost,
              itempic: hitempic,
            },
          ];
          subtot = 0;
          subtot = subtot + slist[i].cost;
        }
      }
      if (i == slist.length - 1) {
        printList.push(prev[0]);
        prev = [{ id: hid++, customer: hcust, item: '', cost: subtot }];
        printList.push(prev[0]);
      }
    }
    return printall(printList);
  };
  return print();
};

const routes = {
  './routes/About': () => <Users />,
  './routes/Home': () => <About />,
};

const List2 = () => {
  const { userName, setUserName, imageNbr, setImageNbr } =
    useContext(UserContext);

  console.log('List2 listing ' + userName + ' ' + imageNbr);

  const pic1 =
    'https://stackblitz.com/files/tailwindcss-aipmul/github/kbwoodall/tailwindcss-aipmul/main/bird.png';

  const pic2 =
    'https://stackblitz.com/files/tailwindcss-aipmul/github/kbwoodall/tailwindcss-aipmul/main/golfPants.jpg';

  const pic3 =
    'https://stackblitz.com/files/tailwindcss-aipmul/github/kbwoodall/tailwindcss-aipmul/main/justPants.jpg';

  const pic4 =
    'https://stackblitz.com/files/tailwindcss-aipmul/github/kbwoodall/tailwindcss-aipmul/main/golfShirt.jpg';

  const nlist = [
    { keyn: 1, value: pic1 },
    { keyn: 2, value: pic2 },
    { keyn: 3, value: pic3 },
    { keyn: 4, value: pic4 },
  ];

  const param = imageNbr;

  const specificValuesFromArray = nlist.filter((obj) => obj.keyn === param);

  const testObj = specificValuesFromArray[0].value;

  return (
    <div className="bg-gray-100 mt-6">
      <img className="flex justify-center items-center  w-64" src={testObj} />
    </div>
  );
};

function App() {
  const routeResult = useRoutes(routes);
  const [userName, setUserName] = useState('All');
  const [imageNbr, setImageNbr] = useState(1);
  const [hindx, setHindx] = useState(0);

  const value2 = {
    userName,
    setUserName,
    imageNbr,
    setImageNbr,
    hindx,
    setHindx,
  };

  return (
    <div className="flex justify-start bg-green-300 h-screen">
      <div>{routeResult}</div>
      <UserContext.Provider value={value2}>
        <div className="bg-green-300 flex-row">
          <div className="mt-5 ml-5">
            <Chdg />
          </div>
          <div className="mt-5 ml-5">
            <UserAll />
          </div>
          <div className="mt-5 ml-5">
            <Cus />
          </div>
        </div>
        <div className="bg-green-300 flex-row">
          <div className=" mt-5 ml-5 ">{hdg()}</div>
          <div className=" mt-5 ml-5 ">
            <Listing />
          </div>
          <div className=" mt-5 ml-5 ">
            <Totln />
          </div>
        </div>
        <div className=" mt-5 ml-5 ">
          <Ihdg />
          <div>
            <List2 picNbr={userName} />
          </div>
        </div>
      </UserContext.Provider>
    </div>
  );
}

const AppWrapper = () => (
  <Suspense fallback={<div>Loading...</div>}>
    <App />
  </Suspense>
);

render(<AppWrapper />, document.getElementById('app'));


*/